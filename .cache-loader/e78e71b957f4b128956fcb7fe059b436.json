{"remainingRequest":"/home/just/repos/front/node_modules/thread-loader/dist/cjs.js??ref--4-1!/home/just/repos/front/node_modules/ts-loader/index.js??ref--4-2!/home/just/repos/front/node_modules/notify/component.tsx","dependencies":[{"path":"/home/just/repos/front/node_modules/notify/component.tsx","mtime":1520676122873},{"path":"/home/just/repos/front/node_modules/cache-loader/dist/cjs.js","mtime":1520676156713},{"path":"/home/just/repos/front/node_modules/thread-loader/dist/cjs.js","mtime":1520676204585},{"path":"/home/just/repos/front/node_modules/ts-loader/index.js","mtime":1520676144729}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = require(\"react\");\nconst react_redux_1 = require(\"react-redux\");\nconst container_1 = require(\"./container\");\nconst constants_1 = require(\"./constants\");\nclass NotifyComponent extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        const flag = this.props.notifyStore.status === constants_1.IN ||\n            this.props.notifyStore.status === constants_1.OUT;\n        return (React.createElement(\"div\", null, flag &&\n            React.createElement(container_1.Container, Object.assign({}, this.props.notifyStore),\n                React.createElement(\"div\", null, this.props.notifyStore.message))));\n    }\n}\nexports.NotifyComponent = NotifyComponent;\nconst connectComponent = ({ notifyStore }) => ({ notifyStore });\nexports.Notify = react_redux_1.connect(connectComponent)(NotifyComponent);\n",{"version":3,"file":"/home/just/repos/front/node_modules/notify/component.tsx","sourceRoot":"","sources":["/home/just/repos/front/node_modules/notify/component.tsx"],"names":[],"mappings":";;AAAA,+BAA8B;AAC9B,6CAAqC;AACrC,2CAAuC;AACvC,2CAAqC;AAOrC,qBAA6B,SAAQ,KAAK,CAAC,SAA0B;IAEnE,YAAY,KAAkB;QAC5B,KAAK,CAAC,KAAK,CAAC,CAAA;IACd,CAAC;IAEM,MAAM;QACX,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,KAAK,cAAE;YAC/C,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,KAAK,eAAG,CAAA;QAEvC,MAAM,CAAC,CAAC,iCACH,IAAI;YACL,oBAAC,qBAAS,oBAAK,IAAI,CAAC,KAAK,CAAC,WAAW;gBACnC,iCAAM,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,CAAO,CACjC,CAER,CAAC,CAAA;IACT,CAAC;CACF;AAlBH,0CAkBG;AAEH,MAAM,gBAAgB,GAAG,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,WAAW,EAAE,CAAC,CAAA;AAElD,QAAA,MAAM,GAAG,qBAAO,CAAC,gBAAgB,CAAC,CAAC,eAAe,CAAC,CAAA","sourcesContent":["import * as React from 'react'\nimport { connect } from 'react-redux'\nimport { Container } from './container'\nimport { IN, OUT } from './constants'\n\ninterface NotifyProps{\n  dispatch: any\n  notifyStore: any\n}\n\nexport class NotifyComponent extends React.Component<NotifyProps, {}> {\n\n  constructor(props: NotifyProps) {\n    super(props)\n  }\n\n  public render() {\n    const flag = this.props.notifyStore.status === IN ||\n      this.props.notifyStore.status === OUT\n\n    return (<div>\n        {flag &&\n        <Container {...this.props.notifyStore}>\n          <div>{this.props.notifyStore.message}</div>\n        </Container>\n      }\n      </div>)\n    }\n  }\n\nconst connectComponent = ({ notifyStore }) => ({ notifyStore })\n\nexport const Notify = connect(connectComponent)(NotifyComponent)\n"]}]}