{"remainingRequest":"/home/just/repos/front/node_modules/thread-loader/dist/cjs.js??ref--4-1!/home/just/repos/front/node_modules/ts-loader/index.js??ref--4-2!/home/just/repos/front/src/guess_word/styled/grid.tsx","dependencies":[{"path":"/home/just/repos/front/src/guess_word/styled/grid.tsx","mtime":1520628577663},{"path":"/home/just/repos/front/node_modules/cache-loader/dist/cjs.js","mtime":1520676156713},{"path":"/home/just/repos/front/node_modules/thread-loader/dist/cjs.js","mtime":1520676204585},{"path":"/home/just/repos/front/node_modules/ts-loader/index.js","mtime":1520676144729}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst colors_1 = require(\"colors\");\nconst rambdax_1 = require(\"rambdax\");\nconst styled_components_1 = require(\"styled-components\");\nconst grid_1 = require(\"../../_styled/grid\");\nconst numberFractions = 11;\nconst gutterHeight = 5;\nexports.Container = grid_1.ContainerBase.extend `\n  display: grid;\n  grid-template-columns: 1fr 12fr 1fr;\n  grid-template-rows: 1fr 1fr 2fr 1fr 5fr 1fr;\n  grid-row-gap: 1vh;\n  grid-template-areas: \". gw_input .\"\n  \". gw_word .\" \n  \". gw_related .\" \n  \". gw_sentence .\" \n  \". gw_image .\" \n  \". gw_translated .\";\n`;\nexports.getFraction = grid_1.fractionGetters(numberFractions, gutterHeight).getFraction;\n/**\n * Value of 1 fraction(1fr) in `vh`\n */\nexports.frHeight = exports.getFraction(1);\nexports.Text = styled_components_1.default.div `\n  height: ${1 * exports.frHeight}vh;\n  padding-top: ${0.15 * exports.frHeight}vh;\n  line-height: ${0.7 * exports.frHeight}vh;\n  font-size: ${0.35 * exports.frHeight}vh;\n  width: 100%;\n`;\nfunction CTextContainer(area) {\n    return grid_1.CenteredItem.extend `\n  height: ${1 * exports.frHeight}vh;\n  grid-area: ${area};\n`;\n}\nexports.CTextContainer = CTextContainer;\nfunction CText(input) {\n    const color = rambdax_1.defaultTo(colors_1.dark3, input.color);\n    const fontWeight = rambdax_1.defaultTo(false, input.bold) ?\n        600 :\n        400;\n    return exports.Text.extend `\n  font-weight: ${fontWeight};\n  color: ${color};\n`;\n}\nexports.CText = CText;\n",{"version":3,"file":"/home/just/repos/front/src/guess_word/styled/grid.tsx","sourceRoot":"","sources":["/home/just/repos/front/src/guess_word/styled/grid.tsx"],"names":[],"mappings":";;AAAA,mCAA8B;AAC9B,qCAAmC;AACnC,yDAAsC;AACtC,6CAAiF;AAEjF,MAAM,eAAe,GAAG,EAAE,CAAA;AAC1B,MAAM,YAAY,GAAG,CAAC,CAAA;AAET,QAAA,SAAS,GAAG,oBAAa,CAAC,MAAM,CAAA;;;;;;;;;;;CAW5C,CAAA;AAEc,uFAAW,CAGzB;AAED;;GAEG;AACU,QAAA,QAAQ,GAAG,mBAAW,CAAC,CAAC,CAAC,CAAA;AAEzB,QAAA,IAAI,GAAG,2BAAM,CAAC,GAAG,CAAA;YAClB,CAAC,GAAG,gBAAQ;iBACP,IAAI,GAAG,gBAAQ;iBACf,GAAG,GAAG,gBAAQ;eAChB,IAAI,GAAG,gBAAQ;;CAE7B,CAAA;AAOD,wBAA+B,IAAY;IAEzC,MAAM,CAAC,mBAAY,CAAC,MAAM,CAAA;YAChB,CAAC,GAAG,gBAAQ;eACT,IAAI;CAClB,CAAA;AACD,CAAC;AAND,wCAMC;AAED,eAAsB,KAAc;IAClC,MAAM,KAAK,GAAG,mBAAS,CAAC,cAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAA;IAC3C,MAAM,UAAU,GAAG,mBAAS,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;QAC/C,GAAG,CAAC,CAAC;QACL,GAAG,CAAA;IAEL,MAAM,CAAC,YAAI,CAAC,MAAM,CAAA;iBACH,UAAU;WAChB,KAAK;CACf,CAAA;AACD,CAAC;AAVD,sBAUC","sourcesContent":["import { dark3 } from 'colors'\nimport { defaultTo } from 'rambdax'\nimport styled from 'styled-components'\nimport { CenteredItem, ContainerBase, fractionGetters } from '../../_styled/grid'\n\nconst numberFractions = 11\nconst gutterHeight = 5\n\nexport const Container = ContainerBase.extend`\n  display: grid;\n  grid-template-columns: 1fr 12fr 1fr;\n  grid-template-rows: 1fr 1fr 2fr 1fr 5fr 1fr;\n  grid-row-gap: 1vh;\n  grid-template-areas: \". gw_input .\"\n  \". gw_word .\" \n  \". gw_related .\" \n  \". gw_sentence .\" \n  \". gw_image .\" \n  \". gw_translated .\";\n`\n\nexport const { getFraction } = fractionGetters(\n  numberFractions,\n  gutterHeight,\n)\n\n/**\n * Value of 1 fraction(1fr) in `vh`\n */\nexport const frHeight = getFraction(1)\n\nexport const Text = styled.div`\n  height: ${1 * frHeight}vh;\n  padding-top: ${0.15 * frHeight}vh;\n  line-height: ${0.7 * frHeight}vh;\n  font-size: ${0.35 * frHeight}vh;\n  width: 100%;\n`\n\ninterface GetText {\n  color?: string\n  bold?: boolean\n}\n\nexport function CTextContainer(area: string) {\n\n  return CenteredItem.extend`\n  height: ${1 * frHeight}vh;\n  grid-area: ${area};\n`\n}\n\nexport function CText(input: GetText) {\n  const color = defaultTo(dark3, input.color)\n  const fontWeight = defaultTo(false, input.bold) ?\n    600 :\n    400\n\n  return Text.extend`\n  font-weight: ${fontWeight};\n  color: ${color};\n`\n}\n"]}]}