{"remainingRequest":"/home/just/repos/front/node_modules/thread-loader/dist/cjs.js??ref--4-1!/home/just/repos/front/node_modules/ts-loader/index.js??ref--4-2!/home/just/repos/front/src/guess_word/reducers.ts","dependencies":[{"path":"/home/just/repos/front/src/guess_word/reducers.ts","mtime":1520624328943},{"path":"/home/just/repos/front/node_modules/cache-loader/dist/cjs.js","mtime":1520676156713},{"path":"/home/just/repos/front/node_modules/thread-loader/dist/cjs.js","mtime":1520676204585},{"path":"/home/just/repos/front/node_modules/ts-loader/index.js","mtime":1520676144729}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst initialState = {\n    answer: '',\n    currentIndex: -1,\n    inputState: '',\n    db: [],\n    listen: false,\n    question: '',\n    ready: false,\n    related: [],\n    translated: '',\n    wordAnswer: '',\n    wordQuestion: '',\n};\nfunction guessWordStore(state = initialState, action) {\n    switch (action.type) {\n        case constants_1.GUESS_WORD_INIT_READY:\n            return Object.assign({}, state, { db: action.payload });\n        case constants_1.GUESS_WORD_NEXT_READY:\n            return Object.assign({}, state, { listen: true, ready: true }, action.payload);\n        case constants_1.GUESS_WORD_STOP:\n            return Object.assign({}, state, { listen: false, inputState: '' });\n        case constants_1.GUESS_WORD_INPUT_CHANGE:\n            return Object.assign({}, state, { inputState: action.payload });\n        default:\n            return state;\n    }\n}\nexports.guessWordStore = guessWordStore;\n",{"version":3,"file":"/home/just/repos/front/src/guess_word/reducers.ts","sourceRoot":"","sources":["/home/just/repos/front/src/guess_word/reducers.ts"],"names":[],"mappings":";;AACA,4CAKqB;AAGrB,MAAM,YAAY,GAAmB;IACnC,MAAM,EAAE,EAAE;IACV,YAAY,EAAE,CAAC,CAAC;IAChB,UAAU,EAAE,EAAE;IACd,EAAE,EAAE,EAAE;IACN,MAAM,EAAE,KAAK;IACb,QAAQ,EAAE,EAAE;IACZ,KAAK,EAAE,KAAK;IACZ,OAAO,EAAE,EAAE;IACX,UAAU,EAAE,EAAE;IACd,UAAU,EAAE,EAAE;IACd,YAAY,EAAE,EAAE;CACjB,CAAA;AAED,wBACE,QAAwB,YAAY,EACpC,MAAc;IAGd,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QACpB,KAAK,iCAAqB;YACxB,MAAM,mBACD,KAAK,IACR,EAAE,EAAE,MAAM,CAAC,OAAO,IACnB;QACH,KAAK,iCAAqB;YACxB,MAAM,mBACD,KAAK,IACR,MAAM,EAAE,IAAI,EACZ,KAAK,EAAE,IAAI,IACR,MAAM,CAAC,OAAO,EAClB;QACH,KAAK,2BAAe;YAClB,MAAM,mBACD,KAAK,IACR,MAAM,EAAE,KAAK,EACb,UAAU,EAAE,EAAE,IACf;QACH,KAAK,mCAAuB;YAC1B,MAAM,mBACD,KAAK,IACR,UAAU,EAAE,MAAM,CAAC,OAAO,IAC3B;QACH;YACE,MAAM,CAAC,KAAK,CAAA;IAChB,CAAC;AACH,CAAC;AAhCD,wCAgCC","sourcesContent":["import { GUESS_WORD_INPUT } from '../constants'\nimport {\n  GUESS_WORD_INIT_READY,\n  GUESS_WORD_INPUT_CHANGE,\n  GUESS_WORD_NEXT_READY,\n  GUESS_WORD_STOP,\n} from '../constants'\nimport { inputChange } from './actions'\n\nconst initialState: GuessWordStore = {\n  answer: '',\n  currentIndex: -1,\n  inputState: '',\n  db: [],\n  listen: false,\n  question: '',\n  ready: false,\n  related: [],\n  translated: '',\n  wordAnswer: '',\n  wordQuestion: '',\n}\n\nexport function guessWordStore(\n  state: GuessWordStore = initialState,\n  action: Action,\n): GuessWordStore {\n\n  switch (action.type) {\n    case GUESS_WORD_INIT_READY:\n      return {\n        ...state,\n        db: action.payload,\n      }\n    case GUESS_WORD_NEXT_READY:\n      return {\n        ...state,\n        listen: true,\n        ready: true,\n        ...action.payload,\n      }\n    case GUESS_WORD_STOP:\n      return {\n        ...state,\n        listen: false,\n        inputState: '',\n      }\n    case GUESS_WORD_INPUT_CHANGE:\n      return {\n        ...state,\n        inputState: action.payload,\n      }\n    default:\n      return state\n  }\n}\n"]}]}