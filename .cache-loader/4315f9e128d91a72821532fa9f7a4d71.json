{"remainingRequest":"/home/just/repos/front/node_modules/thread-loader/dist/cjs.js??ref--4-1!/home/just/repos/front/node_modules/ts-loader/index.js??ref--4-2!/home/just/repos/front/src/carrier/component.tsx","dependencies":[{"path":"/home/just/repos/front/src/carrier/component.tsx","mtime":1520597536780},{"path":"/home/just/repos/front/node_modules/cache-loader/dist/cjs.js","mtime":1520676156713},{"path":"/home/just/repos/front/node_modules/thread-loader/dist/cjs.js","mtime":1520676204585},{"path":"/home/just/repos/front/node_modules/ts-loader/index.js","mtime":1520676144729}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = require(\"react\");\n// STYLED_COMPONENTS\nconst logo_1 = require(\"../navigation/styled/logo\");\nconst grid_1 = require(\"./styled/grid\");\n// IMPORTS\nconst react_redux_1 = require(\"react-redux\");\nconst constants_1 = require(\"../constants\");\nconst randomIcon_1 = require(\"./icons/randomIcon\");\nconst refreshIcon_1 = require(\"./icons/refreshIcon\");\nconst sendIcon_1 = require(\"./icons/sendIcon\");\nconst stepForwardIcon_1 = require(\"./icons/stepForwardIcon\");\nconst volumeDown_1 = require(\"./icons/volumeDown\");\nconst languages_1 = require(\"./languages\");\n/**\n * Carrier component that is shared across all components.\n * It holds navigation and icons.\n */\nclass Carrier extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        const from = this.props.store.fromLanguage;\n        const to = this.props.store.toLanguage;\n        return (React.createElement(grid_1.Container, null,\n            React.createElement(grid_1.A, null,\n                React.createElement(logo_1.Logo, { id: 'toggle-navigation' })),\n            React.createElement(grid_1.C, null, this.props.store.instructions),\n            React.createElement(grid_1.First, null,\n                React.createElement(\"div\", { id: 'languagechange', title: 'Change language direction' }, refreshIcon_1.refreshIcon()),\n                this.props.store.toggleLanguage &&\n                    React.createElement(languages_1.LanguagesComponent, { dispatch: this.props.dispatch, currentPair: `${from}${constants_1.LANGUAGE_SEPARATOR}${to}` })),\n            React.createElement(grid_1.AfterFirst, null,\n                React.createElement(\"div\", { id: 'random', title: 'Toggle random order of questions' }, randomIcon_1.randomIcon(this.props.store.randomFlag))),\n            React.createElement(grid_1.PreMiddle, null,\n                React.createElement(\"div\", { id: 'texttospeech', title: 'Toggle text to speech function' }, volumeDown_1.volumeDownIcon(this.props.store.textToSpeechFlag))),\n            React.createElement(grid_1.Middle, null,\n                React.createElement(\"div\", { id: 'submit', title: 'Submit your answer' }, sendIcon_1.sendIcon())),\n            React.createElement(grid_1.AfterMiddle, { title: 'Go to next question' },\n                React.createElement(\"div\", { id: 'next' }, stepForwardIcon_1.stepForwardIcon())),\n            React.createElement(grid_1.Y, { title: 'Your points' }, this.props.store.points)));\n    }\n}\nexports.Carrier = Carrier;\nconst connectComponent = ({ store }) => ({ store });\nexports.CarrierWrapped = react_redux_1.connect(connectComponent)(Carrier);\n",{"version":3,"file":"/home/just/repos/front/src/carrier/component.tsx","sourceRoot":"","sources":["/home/just/repos/front/src/carrier/component.tsx"],"names":[],"mappings":";;AAAA,+BAA8B;AAE9B,oBAAoB;AACpB,oDAAgD;AAChD,wCAUsB;AAEtB,UAAU;AACV,6CAAqC;AACrC,4CAAiD;AACjD,mDAA+C;AAC/C,qDAAiD;AACjD,+CAA2C;AAC3C,6DAAyD;AACzD,mDAAmD;AACnD,2CAAgD;AAEhD;;;GAGG;AACH,aAAqB,SAAQ,KAAK,CAAC,SAAoB;IACrD,YAAY,KAAY;QACtB,KAAK,CAAC,KAAK,CAAC,CAAA;IACd,CAAC;IACM,MAAM;QACX,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,CAAA;QAC1C,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,UAAU,CAAA;QAEtC,MAAM,CAAC,CACL,oBAAC,gBAAS;YAGR,oBAAC,QAAC;gBACA,oBAAC,WAAI,IAAC,EAAE,EAAC,mBAAmB,GAAG,CAC7B;YAGJ,oBAAC,QAAC,QACC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,CAC5B;YAGJ,oBAAC,YAAK;gBAEJ,6BAAK,EAAE,EAAC,gBAAgB,EAAC,KAAK,EAAC,2BAA2B,IACvD,yBAAW,EAAE,CACV;gBAGJ,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,cAAc;oBAC/B,oBAAC,8BAAkB,IACjB,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAC7B,WAAW,EAAE,GAAG,IAAI,GAAG,8BAAkB,GAAG,EAAE,EAAE,GAChD,CAGE;YAER,oBAAC,iBAAU;gBAET,6BAAK,EAAE,EAAC,QAAQ,EAAC,KAAK,EAAC,kCAAkC,IACtD,uBAAU,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,CACpC,CAEK;YAEb,oBAAC,gBAAS;gBAER,6BAAK,EAAE,EAAC,cAAc,EAAC,KAAK,EAAC,gCAAgC,IAC1D,2BAAc,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAC9C,CAEI;YAEZ,oBAAC,aAAM;gBAEL,6BAAK,EAAE,EAAC,QAAQ,EAAC,KAAK,EAAC,oBAAoB,IACxC,mBAAQ,EAAE,CACP,CAEC;YAET,oBAAC,kBAAW,IAAC,KAAK,EAAC,qBAAqB;gBAEtC,6BAAK,EAAE,EAAC,MAAM,IACX,iCAAe,EAAE,CACd,CAEM;YAEd,oBAAC,QAAC,IAAC,KAAK,EAAC,aAAa,IACnB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CACtB,CAEM,CACb,CAAA;IACH,CAAC;CACF;AA7ED,0BA6EC;AAED,MAAM,gBAAgB,GAAG,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAA;AAEtC,QAAA,cAAc,GAAG,qBAAO,CAAC,gBAAgB,CAAC,CAAC,OAAO,CAAC,CAAA","sourcesContent":["import * as React from 'react'\n\n// STYLED_COMPONENTS\nimport { Logo } from '../navigation/styled/logo'\nimport {\n  A,\n  AfterFirst,\n  AfterMiddle,\n  C,\n  Container,\n  First,\n  Middle,\n  PreMiddle,\n  Y,\n} from './styled/grid'\n\n// IMPORTS\nimport { connect } from 'react-redux'\nimport { LANGUAGE_SEPARATOR } from '../constants'\nimport { randomIcon } from './icons/randomIcon'\nimport { refreshIcon } from './icons/refreshIcon'\nimport { sendIcon } from './icons/sendIcon'\nimport { stepForwardIcon } from './icons/stepForwardIcon'\nimport { volumeDownIcon } from './icons/volumeDown'\nimport { LanguagesComponent } from './languages'\n\n/**\n * Carrier component that is shared across all components.\n * It holds navigation and icons.\n */\nexport class Carrier extends React.Component<Props, {}> {\n  constructor(props: Props) {\n    super(props)\n  }\n  public render() {\n    const from = this.props.store.fromLanguage\n    const to = this.props.store.toLanguage\n\n    return (\n      <Container>\n\n        {/* Navigation component */}\n        <A>\n          <Logo id='toggle-navigation' />\n        </A>\n\n        {/* Display app instructions */}\n        <C>\n          {this.props.store.instructions}\n        </C>\n\n        {/* Change language direction */}\n        <First>\n\n          <div id='languagechange' title='Change language direction'>\n            {refreshIcon()}\n          </div>\n\n          {\n            this.props.store.toggleLanguage &&\n            <LanguagesComponent\n              dispatch={this.props.dispatch}\n              currentPair={`${from}${LANGUAGE_SEPARATOR}${to}`}\n            />\n          }\n\n        </First>\n\n        <AfterFirst>\n\n          <div id='random' title='Toggle random order of questions'>\n            {randomIcon(this.props.store.randomFlag)}\n          </div>\n\n        </AfterFirst>\n\n        <PreMiddle>\n\n          <div id='texttospeech' title='Toggle text to speech function'>\n            {volumeDownIcon(this.props.store.textToSpeechFlag)}\n          </div>\n\n        </PreMiddle>\n\n        <Middle>\n\n          <div id='submit' title='Submit your answer'>\n            {sendIcon()}\n          </div>\n\n        </Middle>\n\n        <AfterMiddle title='Go to next question'>\n\n          <div id='next'>\n            {stepForwardIcon()}\n          </div>\n\n        </AfterMiddle>\n\n        <Y title='Your points'>\n          {this.props.store.points}\n        </Y>\n\n      </Container>\n    )\n  }\n}\n\nconst connectComponent = ({ store }) => ({ store })\n\nexport const CarrierWrapped = connect(connectComponent)(Carrier)\n"]}]}