{"remainingRequest":"/home/just/repos/front/node_modules/thread-loader/dist/cjs.js??ref--4-1!/home/just/repos/front/node_modules/ts-loader/index.js??ref--4-2!/home/just/repos/front/src/index.tsx","dependencies":[{"path":"/home/just/repos/front/src/index.tsx","mtime":1520674353245},{"path":"/home/just/repos/front/node_modules/cache-loader/dist/cjs.js","mtime":1520676156713},{"path":"/home/just/repos/front/node_modules/thread-loader/dist/cjs.js","mtime":1520676204585},{"path":"/home/just/repos/front/node_modules/ts-loader/index.js","mtime":1520676144729}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"./carrier/style.css\");\nrequire(\"./root/rxImports\");\n// IMPORTS\nconst React = require(\"react\");\nconst react_dom_1 = require(\"react-dom\");\nconst connected_react_router_1 = require(\"connected-react-router\");\nconst history_1 = require(\"history\");\nconst react_redux_1 = require(\"react-redux\");\nconst react_router_dom_1 = require(\"react-router-dom\");\nconst redux_1 = require(\"redux\");\nconst redux_observable_1 = require(\"redux-observable\");\nconst Observable_1 = require(\"rxjs/Observable\");\nconst history = history_1.createBrowserHistory();\n// COMPONENTS\nconst component_1 = require(\"notify/component\");\nconst component_2 = require(\"./carrier/component\");\nconst component_3 = require(\"./choose_word/component\");\nconst component_4 = require(\"./guess_word/component\");\nconst component_5 = require(\"./learning_meme/component\");\nconst component_6 = require(\"./navigation/component\");\nconst component_7 = require(\"./user/component\");\nconst component_8 = require(\"./write_sentence/component\");\n// INTERNAL_MODULES\nconst getJSON_1 = require(\"./_modules/getJSON\");\nconst getPouchDB_1 = require(\"./_modules/getPouchDB\");\nconst getUserData_1 = require(\"./_modules/getUserData\");\nconst post_1 = require(\"./_modules/post\");\nconst actions_1 = require(\"./root/actions\");\nconst combinedReducers_1 = require(\"./root/combinedReducers\");\nconst postRequest = (url, body) => Observable_1.Observable.fromPromise(post_1.post(url, body));\nconst getJSON = url => Observable_1.Observable.fromPromise(getJSON_1.getJSON(url));\nconst getUserData = getPouchModule => Observable_1.Observable.fromPromise(getUserData_1.getUserData(getPouchModule));\n// EPICS\nconst _1 = require(\"./root/epics/\");\nconst dependencies = {\n    getJSON: getJSON,\n    getPouchDB: getPouchDB_1.getPouchDB,\n    getUserData: getUserData,\n    postRequest: postRequest,\n};\nconst epicMiddleware = redux_observable_1.createEpicMiddleware(_1.rootEpic, { dependencies });\n// BOILERPLATE\nconst id = 'react-container';\nconst element = document.createElement('div');\nelement.setAttribute('id', id);\ndocument.body.appendChild(element);\nconst composeEnhancers = process.env.NODE_ENV === 'production' ?\n    redux_1.compose :\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ === undefined ?\n        redux_1.compose :\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n// CREATE_STORE\nconst createdStore = redux_1.createStore(connected_react_router_1.connectRouter(history)(combinedReducers_1.combinedReducers), composeEnhancers(redux_1.applyMiddleware(connected_react_router_1.routerMiddleware(history), epicMiddleware)));\nconsole.log(11);\n// ROOT_COMPONENT\nclass Root extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n        this.props.dispatch(actions_1.init());\n    }\n    render() {\n        return (React.createElement(\"div\", null,\n            React.createElement(component_1.Notify, null),\n            React.createElement(component_2.CarrierWrapped, null),\n            React.createElement(connected_react_router_1.ConnectedRouter, { history: history },\n                React.createElement(\"div\", null,\n                    React.createElement(component_6.NavigationWrapped, null),\n                    React.createElement(react_router_dom_1.Route, { component: component_5.LearningMemeWrapped, path: '/' }),\n                    React.createElement(react_router_dom_1.Route, { component: component_4.GuessWordWrapped, exact: true, path: '/guess-word' }),\n                    React.createElement(react_router_dom_1.Route, { component: component_5.LearningMemeWrapped, exact: true, path: '/learning-meme' }),\n                    React.createElement(react_router_dom_1.Route, { component: component_8.WriteSentenceWrapped, exact: true, path: '/write-sentence' }),\n                    React.createElement(react_router_dom_1.Route, { component: component_3.ChooseWordWrapped, exact: true, path: '/choose-word' }),\n                    React.createElement(react_router_dom_1.Route, { component: component_7.UserWrapped, exact: true, path: '/user' })))));\n    }\n}\n// CONNECT_COMPONENT\nconst connectRootComponent = ({ store, navigationStore, }) => ({\n    navigationStore,\n    store,\n});\nconst RootWrapped = react_redux_1.connect(connectRootComponent)(Root);\nreact_dom_1.render(React.createElement(react_redux_1.Provider, { store: createdStore },\n    React.createElement(RootWrapped, null)), document.getElementById(id));\n",{"version":3,"file":"/home/just/repos/front/src/index.tsx","sourceRoot":"","sources":["/home/just/repos/front/src/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import './carrier/style.css'\nimport './root/rxImports'\n\n// IMPORTS\nimport * as React from 'react'\nimport { render } from 'react-dom'\n\nimport {\n  ConnectedRouter,\n  connectRouter,\n  routerMiddleware,\n} from 'connected-react-router'\n\nimport { createBrowserHistory } from 'history'\nimport { connect, Provider } from 'react-redux'\nimport { Route } from 'react-router-dom'\nimport { applyMiddleware, compose, createStore } from 'redux'\nimport { createEpicMiddleware } from 'redux-observable'\nimport { Observable } from 'rxjs/Observable'\nconst history = createBrowserHistory()\n\n// COMPONENTS\nimport { Notify } from 'notify/component'\nimport { CarrierWrapped } from './carrier/component'\nimport { ChooseWordWrapped } from './choose_word/component'\nimport { GuessWordWrapped } from './guess_word/component'\nimport { LearningMemeWrapped } from './learning_meme/component'\nimport { NavigationWrapped } from './navigation/component'\nimport { UserWrapped } from './user/component'\nimport { WriteSentenceWrapped } from './write_sentence/component'\n\n// INTERNAL_MODULES\nimport { getJSON as getJSONModule } from './_modules/getJSON'\nimport { getPouchDB } from './_modules/getPouchDB'\nimport { getUserData as getUserDataModule } from './_modules/getUserData'\nimport { post } from './_modules/post'\nimport { init } from './root/actions'\nimport { combinedReducers } from './root/combinedReducers'\n\nconst postRequest = (url, body) => Observable.fromPromise(post(url, body))\nconst getJSON = url => Observable.fromPromise(getJSONModule(url))\nconst getUserData = getPouchModule => Observable.fromPromise(\n  getUserDataModule(getPouchModule),\n)\n\n// EPICS\nimport { rootEpic } from './root/epics/'\nconst dependencies = {\n  getJSON: getJSON,\n  getPouchDB: getPouchDB,\n  getUserData: getUserData,\n  postRequest: postRequest,\n}\n\nconst epicMiddleware = createEpicMiddleware(rootEpic, { dependencies })\n\n// BOILERPLATE\nconst id = 'react-container'\nconst element = document.createElement('div')\nelement.setAttribute('id', id)\ndocument.body.appendChild(element)\n\nconst composeEnhancers = process.env.NODE_ENV === 'production' ?\n  compose :\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ === undefined ?\n    compose :\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n\n// CREATE_STORE\nconst createdStore = createStore(\n  connectRouter(history)(combinedReducers),\n  composeEnhancers(\n    applyMiddleware(\n      routerMiddleware(history),\n      epicMiddleware),\n  ),\n)\nconsole.log(11)\n// ROOT_COMPONENT\nclass Root extends React.Component<Props, {}> {\n  constructor(props: any) {\n    super(props)\n  }\n\n  public componentDidMount() {\n    this.props.dispatch(init())\n  }\n\n  public render() {\n    return (\n      <div>\n        <Notify />\n        <CarrierWrapped />\n        <ConnectedRouter history={history}>\n          <div>\n            <NavigationWrapped />\n\n            <Route\n              component={LearningMemeWrapped}\n              path='/'\n            />\n\n            {/* ROUTES_MARKER */}\n            <Route \n              component={GuessWordWrapped} \n              exact={true} \n              path='/guess-word'\n            />\n\n            <Route\n              component={LearningMemeWrapped}\n              exact={true}\n              path='/learning-meme'\n            />\n\n            <Route\n              component={WriteSentenceWrapped}\n              exact={true}\n              path='/write-sentence'\n            />\n\n            <Route\n              component={ChooseWordWrapped}\n              exact={true}\n              path='/choose-word'\n            />\n\n            <Route\n              component={UserWrapped}\n              exact={true}\n              path='/user'\n            />\n          </div>\n        </ConnectedRouter>\n      </div>\n    )\n  }\n}\n\n// CONNECT_COMPONENT\nconst connectRootComponent = ({\n  store,\n  navigationStore,\n}) => ({\n    navigationStore,\n    store,\n  })\n\nconst RootWrapped = connect(connectRootComponent)(Root)\n\nrender(\n  <Provider store={createdStore}>\n    <RootWrapped />\n  </Provider>,\n  document.getElementById(id),\n)\n"]}]}