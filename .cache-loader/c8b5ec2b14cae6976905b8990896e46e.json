{"remainingRequest":"/home/just/repos/front/node_modules/thread-loader/dist/cjs.js??ref--4-1!/home/just/repos/front/node_modules/ts-loader/index.js??ref--4-2!/home/just/repos/front/src/root/epics/sharedAddPoints.ts","dependencies":[{"path":"/home/just/repos/front/src/root/epics/sharedAddPoints.ts","mtime":1517486861516},{"path":"/home/just/repos/front/node_modules/cache-loader/dist/cjs.js","mtime":1520676156713},{"path":"/home/just/repos/front/node_modules/thread-loader/dist/cjs.js","mtime":1520676204585},{"path":"/home/just/repos/front/node_modules/ts-loader/index.js","mtime":1520676144729}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Observable_1 = require(\"rxjs/Observable\");\nconst constants_1 = require(\"../../constants\");\nexports.sharedAddPointsEpic = (action$, store) => {\n    const points$ = action$.ofType(constants_1.SHARED_ADD_POINTS);\n    return points$\n        .debounceTime(constants_1.UPDATE_POINTS_DELAY)\n        .switchMap(action => {\n        return new Observable_1.Observable(observer => {\n            const { userDBCloud, points } = store.getState().store;\n            if (userDBCloud === undefined) {\n                return observer.complete();\n            }\n            userDBCloud.get('data')\n                .then((doc) => {\n                const updatedDoc = Object.assign({}, doc, { points });\n                userDBCloud.put(updatedDoc).then(() => {\n                    console.log('points updated');\n                    observer.complete();\n                });\n            })\n                .catch(e => {\n                console.error(e);\n                observer.complete();\n            });\n        });\n    });\n};\n",{"version":3,"file":"/home/just/repos/front/src/root/epics/sharedAddPoints.ts","sourceRoot":"","sources":["/home/just/repos/front/src/root/epics/sharedAddPoints.ts"],"names":[],"mappings":";;AACA,gDAA4C;AAC5C,+CAAwE;AAE3D,QAAA,mBAAmB,GAAG,CACjC,OAAiD,EACjD,KAAsB,EACL,EAAE;IACnB,MAAM,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,6BAAiB,CAAC,CAAA;IAEjD,MAAM,CAAC,OAAO;SACX,YAAY,CAAC,+BAAmB,CAAC;SACjC,SAAS,CAAC,MAAM,CAAC,EAAE;QAElB,MAAM,CAAC,IAAI,uBAAU,CAAC,QAAQ,CAAC,EAAE;YAC/B,MAAM,EAAE,WAAW,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAA;YAEtD,EAAE,CAAC,CAAC,WAAW,KAAK,SAAS,CAAC,CAAC,CAAC;gBAE9B,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAA;YAC5B,CAAC;YAED,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC;iBACpB,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;gBACjB,MAAM,UAAU,qBAAQ,GAAG,IAAE,MAAM,GAAE,CAAA;gBAErC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;oBACpC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAA;oBAC7B,QAAQ,CAAC,QAAQ,EAAE,CAAA;gBACrB,CAAC,CAAC,CAAA;YACJ,CAAC,CAAC;iBACD,KAAK,CAAC,CAAC,CAAC,EAAE;gBACT,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;gBAChB,QAAQ,CAAC,QAAQ,EAAE,CAAA;YACrB,CAAC,CAAC,CAAA;QACN,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACN,CAAC,CAAA","sourcesContent":["import { ActionsObservable } from 'redux-observable'\nimport { Observable } from 'rxjs/Observable'\nimport { SHARED_ADD_POINTS, UPDATE_POINTS_DELAY } from '../../constants'\n\nexport const sharedAddPointsEpic = (\n  action$: ActionsObservable<SharedAddPointsAction>,\n  store: ObservableStore,\n): Observable<any> => {\n  const points$ = action$.ofType(SHARED_ADD_POINTS)\n\n  return points$\n    .debounceTime(UPDATE_POINTS_DELAY)\n    .switchMap(action => {\n\n      return new Observable(observer => {\n        const { userDBCloud, points } = store.getState().store\n\n        if (userDBCloud === undefined) {\n\n          return observer.complete()\n        }\n\n        userDBCloud.get('data')\n          .then((doc: any) => {\n            const updatedDoc = { ...doc, points }\n\n            userDBCloud.put(updatedDoc).then(() => {\n              console.log('points updated')\n              observer.complete()\n            })\n          })\n          .catch(e => {\n            console.error(e)\n            observer.complete()\n          })\n      })\n    })\n}\n"]}]}