{"remainingRequest":"/home/just/repos/front/node_modules/thread-loader/dist/cjs.js??ref--4-1!/home/just/repos/front/node_modules/ts-loader/index.js??ref--4-2!/home/just/repos/front/src/root/epics/clickEpic.ts","dependencies":[{"path":"/home/just/repos/front/src/root/epics/clickEpic.ts","mtime":1520622821443},{"path":"/home/just/repos/front/node_modules/cache-loader/dist/cjs.js","mtime":1520676156713},{"path":"/home/just/repos/front/node_modules/thread-loader/dist/cjs.js","mtime":1520676204585},{"path":"/home/just/repos/front/node_modules/ts-loader/index.js","mtime":1520676144729}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst rambdax_1 = require(\"rambdax\");\nconst Observable_1 = require(\"rxjs/Observable\");\nconst constants_1 = require(\"../../constants\");\nfunction getActionFromID(id, name) {\n    switch (id) {\n        case 'languagechange':\n            return { type: constants_1.LANGUAGE_CHANGE_INIT };\n        case 'toggle-navigation':\n            return { type: constants_1.NAVIGATION_TOGGLE };\n        case 'next':\n            return { type: `${name}@NEXT` };\n        case 'submit':\n            return { type: `${name}@CHECK` };\n        case 'random':\n            return { type: constants_1.SETTINGS_RANDOM };\n        case 'texttospeech':\n            return { type: constants_1.SETTINGS_TEXT_TO_SPEECH };\n        default:\n            return false;\n    }\n}\nconst MIN = 2;\nfunction getID(click) {\n    let willReturn = '';\n    for (const i of rambdax_1.range(0, MIN + 1)) {\n        if (click.path[i].id) {\n            willReturn = click.path[i].id;\n        }\n    }\n    return willReturn;\n}\n/**\n * It listens for any click events.\n * If there is event handler, action is emitted.\n */\nexports.clickEpic = (action$, store) => {\n    const click$ = Observable_1.Observable.fromEvent(document, 'click');\n    return click$.switchMap(click => {\n        return new Observable_1.Observable(observer => {\n            const id = click.path.length >= MIN ?\n                getID(click) :\n                '';\n            const { name } = store.getState().store;\n            const actionToEmit = getActionFromID(id, name);\n            if (actionToEmit === false) {\n                return observer.complete();\n            }\n            observer.next(actionToEmit);\n            observer.complete();\n        });\n    });\n};\n",{"version":3,"file":"/home/just/repos/front/src/root/epics/clickEpic.ts","sourceRoot":"","sources":["/home/just/repos/front/src/root/epics/clickEpic.ts"],"names":[],"mappings":";;AAAA,qCAA+B;AAE/B,gDAA4C;AAC5C,+CAKwB;AAExB,yBAAyB,EAAU,EAAE,IAAY;IAC/C,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACX,KAAK,gBAAgB;YACnB,MAAM,CAAC,EAAE,IAAI,EAAE,gCAAoB,EAAE,CAAA;QACvC,KAAK,mBAAmB;YACtB,MAAM,CAAC,EAAE,IAAI,EAAE,6BAAiB,EAAE,CAAA;QACpC,KAAK,MAAM;YACT,MAAM,CAAC,EAAE,IAAI,EAAE,GAAG,IAAI,OAAO,EAAE,CAAA;QACjC,KAAK,QAAQ;YACX,MAAM,CAAC,EAAE,IAAI,EAAE,GAAG,IAAI,QAAQ,EAAE,CAAA;QAClC,KAAK,QAAQ;YACX,MAAM,CAAC,EAAE,IAAI,EAAE,2BAAe,EAAE,CAAA;QAClC,KAAK,cAAc;YACjB,MAAM,CAAC,EAAE,IAAI,EAAE,mCAAuB,EAAE,CAAA;QAC1C;YACE,MAAM,CAAC,KAAK,CAAA;IAChB,CAAC;AACH,CAAC;AAED,MAAM,GAAG,GAAG,CAAC,CAAA;AAEb,eAAe,KAAU;IACvB,IAAI,UAAU,GAAG,EAAE,CAAA;IACnB,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,eAAK,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAClC,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACrB,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAA;QAC/B,CAAC;IACH,CAAC;IAED,MAAM,CAAC,UAAU,CAAA;AACnB,CAAC;AAED;;;GAGG;AACU,QAAA,SAAS,GAAG,CACvB,OAAsC,EACtC,KAAsB,EACL,EAAE;IAEnB,MAAM,MAAM,GAAG,uBAAU,CAAC,SAAS,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA;IAEtD,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;QAE9B,MAAM,CAAC,IAAI,uBAAU,CAAC,QAAQ,CAAC,EAAE;YAC/B,MAAM,EAAE,GAAI,KAAa,CAAC,IAAI,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC;gBAC5C,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;gBACd,EAAE,CAAA;YAEJ,MAAM,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAA;YACvC,MAAM,YAAY,GAAG,eAAe,CAAC,EAAE,EAAE,IAAI,CAAC,CAAA;YAE9C,EAAE,CAAC,CAAC,YAAY,KAAK,KAAK,CAAC,CAAC,CAAC;gBAE3B,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAA;YAC5B,CAAC;YAED,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA;YAC3B,QAAQ,CAAC,QAAQ,EAAE,CAAA;QACrB,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AAEJ,CAAC,CAAA","sourcesContent":["import { range } from 'rambdax'\nimport { ActionsObservable } from 'redux-observable'\nimport { Observable } from 'rxjs/Observable'\nimport {\n  LANGUAGE_CHANGE_INIT,\n  NAVIGATION_TOGGLE,\n  SETTINGS_RANDOM,\n  SETTINGS_TEXT_TO_SPEECH,\n} from '../../constants'\n\nfunction getActionFromID(id: string, name: string): false | Action {\n  switch (id) {\n    case 'languagechange':\n      return { type: LANGUAGE_CHANGE_INIT }\n    case 'toggle-navigation':\n      return { type: NAVIGATION_TOGGLE }\n    case 'next':\n      return { type: `${name}@NEXT` }\n    case 'submit':\n      return { type: `${name}@CHECK` }\n    case 'random':\n      return { type: SETTINGS_RANDOM }\n    case 'texttospeech':\n      return { type: SETTINGS_TEXT_TO_SPEECH }\n    default:\n      return false\n  }\n}\n\nconst MIN = 2\n\nfunction getID(click: any) {\n  let willReturn = ''\n  for (const i of range(0, MIN + 1)) {\n    if (click.path[i].id) {\n      willReturn = click.path[i].id\n    }\n  }\n\n  return willReturn\n}\n\n/**\n * It listens for any click events.\n * If there is event handler, action is emitted.\n */\nexport const clickEpic = (\n  action$: ActionsObservable<InitAction>,\n  store: ObservableStore,\n): Observable<any> => {\n\n  const click$ = Observable.fromEvent(document, 'click')\n\n  return click$.switchMap(click => {\n\n    return new Observable(observer => {\n      const id = (click as any).path.length >= MIN ?\n        getID(click) :\n        ''\n\n      const { name } = store.getState().store\n      const actionToEmit = getActionFromID(id, name)\n\n      if (actionToEmit === false) {\n\n        return observer.complete()\n      }\n\n      observer.next(actionToEmit)\n      observer.complete()\n    })\n  })\n\n}\n"]}]}