{"remainingRequest":"/home/just/repos/front/node_modules/thread-loader/dist/cjs.js??ref--4-1!/home/just/repos/front/node_modules/ts-loader/index.js??ref--4-2!/home/just/repos/front/src/root/reducers.ts","dependencies":[{"path":"/home/just/repos/front/src/root/reducers.ts","mtime":1519593819099},{"path":"/home/just/repos/front/node_modules/cache-loader/dist/cjs.js","mtime":1520676156713},{"path":"/home/just/repos/front/node_modules/thread-loader/dist/cjs.js","mtime":1520676204585},{"path":"/home/just/repos/front/node_modules/ts-loader/index.js","mtime":1520676144729}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst getInitialState_1 = require(\"../_helpers/getInitialState\");\nconst normalizeDB_1 = require(\"../_helpers/normalizeDB\");\nconst getInstructions_1 = require(\"../_modules/getInstructions\");\nconst constants_2 = require(\"../constants\");\nconst languageChangeClick_1 = require(\"./side_effects/languageChangeClick\");\nconst settingsRandom_1 = require(\"./side_effects/settingsRandom\");\nconst settingsTextToSpeech_1 = require(\"./side_effects/settingsTextToSpeech\");\nconst sharedAddPoints_1 = require(\"./side_effects/sharedAddPoints\");\nfunction store(state = getInitialState_1.getInitialState(), action) {\n    switch (action.type) {\n        case constants_1.INIT_READY:\n            /**\n             * init process is ready\n             * user's reducer also listens for the same action\n             */\n            return Object.assign({}, state, action.payload.userData.forRootReducer, { db: normalizeDB_1.normalizeDB(action.payload.received.rows), ready: true });\n        case constants_1.LANGUAGE_CHANGE_INIT:\n            /**\n             * language change icon is clicked\n             */\n            return Object.assign({}, state, { toggleLanguage: !state.toggleLanguage });\n        case constants_1.LANGUAGE_CHANGE_CLICK:\n            /**\n             * new language pair is selected\n             */\n            return languageChangeClick_1.languageChangeClick(action, state);\n        case constants_1.SETTINGS_RANDOM:\n            return settingsRandom_1.settingsRandom(action, state);\n        case constants_1.SETTINGS_TEXT_TO_SPEECH:\n            return settingsTextToSpeech_1.settingsTextToSpeech(action, state);\n        case constants_1.SHARED_ADD_POINTS:\n            return sharedAddPoints_1.sharedAddPoints(action, state);\n        /**\n         * some application is mounted\n         */\n        case constants_1.SHARED_INIT:\n            return Object.assign({}, state, { instructions: getInstructions_1.getInstructions(action.payload), name: action.payload });\n        /**\n         * user is logged through login form\n         */\n        case constants_1.POUCH_USER_READY:\n            return Object.assign({}, state, { logged: true, points: action.payload.data.points, randomFlag: action.payload.data.randomFlag, textToSpeechFlag: action.payload.data.textToSpeechFlag, userDBCloud: action.payload.userDBCloud });\n        case constants_2.USER_LOGOUT:\n            return getInitialState_1.getInitialState();\n        default:\n            return state;\n    }\n}\nexports.store = store;\n",{"version":3,"file":"/home/just/repos/front/src/root/reducers.ts","sourceRoot":"","sources":["/home/just/repos/front/src/root/reducers.ts"],"names":[],"mappings":";;AAAA,4CASqB;AAErB,iEAA6D;AAC7D,yDAAqD;AACrD,iEAA6D;AAC7D,4CAA0C;AAC1C,4EAAwE;AACxE,kEAA8D;AAC9D,8EAA0E;AAC1E,oEAAgE;AAEhE,eACE,QAAe,iCAAe,EAAE,EAChC,MAAc;IAGd,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QACpB,KAAK,sBAAU;YACb;;;eAGG;YACH,MAAM,mBACD,KAAK,EACL,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,cAAc,IACzC,EAAE,EAAE,yBAAW,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,EAC7C,KAAK,EAAE,IAAI,IACZ;QACH,KAAK,gCAAoB;YACvB;;eAEG;YACH,MAAM,mBACD,KAAK,IACR,cAAc,EAAE,CAAC,KAAK,CAAC,cAAc,IACtC;QACH,KAAK,iCAAqB;YACxB;;eAEG;YACH,MAAM,CAAC,yCAAmB,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QAC3C,KAAK,2BAAe;YAClB,MAAM,CAAC,+BAAc,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QACtC,KAAK,mCAAuB;YAC1B,MAAM,CAAC,2CAAoB,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QAC5C,KAAK,6BAAiB;YACpB,MAAM,CAAC,iCAAe,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QACvC;;WAEG;QACH,KAAK,uBAAW;YACd,MAAM,mBACD,KAAK,IACR,YAAY,EAAE,iCAAe,CAAC,MAAM,CAAC,OAAO,CAAC,EAC7C,IAAI,EAAE,MAAM,CAAC,OAAO,IACrB;QACH;;WAEG;QACH,KAAK,4BAAgB;YACnB,MAAM,mBACD,KAAK,IACR,MAAM,EAAE,IAAI,EACZ,MAAM,EAAE,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAClC,UAAU,EAAE,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAC1C,gBAAgB,EAAE,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,EACtD,WAAW,EAAE,MAAM,CAAC,OAAO,CAAC,WAAW,IACxC;QACH,KAAK,uBAAW;YACd,MAAM,CAAC,iCAAe,EAAE,CAAA;QAC1B;YACE,MAAM,CAAC,KAAK,CAAA;IAChB,CAAC;AACH,CAAC;AA9DD,sBA8DC","sourcesContent":["import {\n  INIT_READY,\n  LANGUAGE_CHANGE_CLICK,\n  LANGUAGE_CHANGE_INIT,\n  POUCH_USER_READY,\n  SETTINGS_RANDOM,\n  SETTINGS_TEXT_TO_SPEECH,\n  SHARED_ADD_POINTS,\n  SHARED_INIT,\n} from '../constants'\n\nimport { getInitialState } from '../_helpers/getInitialState'\nimport { normalizeDB } from '../_helpers/normalizeDB'\nimport { getInstructions } from '../_modules/getInstructions'\nimport { USER_LOGOUT } from '../constants'\nimport { languageChangeClick } from './side_effects/languageChangeClick'\nimport { settingsRandom } from './side_effects/settingsRandom'\nimport { settingsTextToSpeech } from './side_effects/settingsTextToSpeech'\nimport { sharedAddPoints } from './side_effects/sharedAddPoints'\n\nexport function store(\n  state: Store = getInitialState(),\n  action: Action,\n): Store {\n\n  switch (action.type) {\n    case INIT_READY:\n      /**\n       * init process is ready\n       * user's reducer also listens for the same action\n       */\n      return {\n        ...state,\n        ...action.payload.userData.forRootReducer,\n        db: normalizeDB(action.payload.received.rows),\n        ready: true,\n      }\n    case LANGUAGE_CHANGE_INIT:\n      /**\n       * language change icon is clicked\n       */\n      return {\n        ...state,\n        toggleLanguage: !state.toggleLanguage,\n      }\n    case LANGUAGE_CHANGE_CLICK:\n      /**\n       * new language pair is selected\n       */\n      return languageChangeClick(action, state)\n    case SETTINGS_RANDOM:\n      return settingsRandom(action, state)\n    case SETTINGS_TEXT_TO_SPEECH:\n      return settingsTextToSpeech(action, state)\n    case SHARED_ADD_POINTS:\n      return sharedAddPoints(action, state)\n    /**\n     * some application is mounted\n     */\n    case SHARED_INIT:\n      return {\n        ...state,\n        instructions: getInstructions(action.payload),\n        name: action.payload,\n      }\n    /**\n     * user is logged through login form\n     */\n    case POUCH_USER_READY:\n      return {\n        ...state,\n        logged: true,\n        points: action.payload.data.points,\n        randomFlag: action.payload.data.randomFlag,\n        textToSpeechFlag: action.payload.data.textToSpeechFlag,\n        userDBCloud: action.payload.userDBCloud,\n      }\n    case USER_LOGOUT:\n      return getInitialState()\n    default:\n      return state\n  }\n}\n"]}]}