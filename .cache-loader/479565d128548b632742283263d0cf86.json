{"remainingRequest":"/home/just/repos/front/node_modules/thread-loader/dist/cjs.js??ref--4-1!/home/just/repos/front/node_modules/ts-loader/index.js??ref--4-2!/home/just/repos/front/node_modules/notify/reducers.ts","dependencies":[{"path":"/home/just/repos/front/node_modules/notify/reducers.ts","mtime":1520676122893},{"path":"/home/just/repos/front/node_modules/cache-loader/dist/cjs.js","mtime":1520676156713},{"path":"/home/just/repos/front/node_modules/thread-loader/dist/cjs.js","mtime":1520676204585},{"path":"/home/just/repos/front/node_modules/ts-loader/index.js","mtime":1520676144729}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst rambdax_1 = require(\"rambdax\");\nconst constants_1 = require(\"./constants\");\nconst initialState = {\n    message: '',\n    mode: '',\n    ms: 0,\n    status: constants_1.HIDDEN,\n};\nfunction getModeFromAction(action) {\n    return rambdax_1.replace(constants_1.NOTIFY, '', action.type);\n}\nfunction notifyStore(state = initialState, action) {\n    switch (action.type) {\n        case constants_1.NOTIFY_SUCCESS:\n        case constants_1.NOTIFY_ERROR:\n        case constants_1.NOTIFY_INFO:\n        case constants_1.NOTIFY_WARNING:\n            return Object.assign({}, state, action.payload, { mode: getModeFromAction(action), status: constants_1.HIDDEN });\n        case constants_1.IN:\n            return Object.assign({}, state, { status: constants_1.IN });\n        case constants_1.OUT:\n            return Object.assign({}, state, { status: constants_1.OUT });\n        default:\n            return state;\n    }\n}\nexports.notifyStore = notifyStore;\n",{"version":3,"file":"/home/just/repos/front/node_modules/notify/reducers.ts","sourceRoot":"","sources":["/home/just/repos/front/node_modules/notify/reducers.ts"],"names":[],"mappings":";;AAAA,qCAAiC;AACjC,2CASoB;AAEpB,MAAM,YAAY,GAAG;IACnB,OAAO,EAAE,EAAE;IACX,IAAI,EAAE,EAAE;IACR,EAAE,EAAE,CAAC;IACL,MAAM,EAAE,kBAAM;CACf,CAAA;AAED,2BAA2B,MAAM;IAC/B,MAAM,CAAC,iBAAO,CAAC,kBAAM,EAAE,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,CAAA;AACzC,CAAC;AAED,qBACE,KAAK,GAAG,YAAY,EACpB,MAAM;IAGN,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QACpB,KAAK,0BAAc,CAAC;QACpB,KAAK,wBAAY,CAAC;QAClB,KAAK,uBAAW,CAAC;QACjB,KAAK,0BAAc;YACjB,MAAM,mBACD,KAAK,EACL,MAAM,CAAC,OAAO,IACjB,IAAI,EAAE,iBAAiB,CAAC,MAAM,CAAC,EAC/B,MAAM,EAAE,kBAAM,IACf;QACH,KAAK,cAAE;YACP,MAAM,mBACD,KAAK,IACR,MAAM,EAAE,cAAE,IACX;QACD,KAAK,eAAG;YACR,MAAM,mBACD,KAAK,IACR,MAAM,EAAE,eAAG,IACZ;QACD;YACE,MAAM,CAAC,KAAK,CAAA;IAChB,CAAC;AACH,CAAC;AA7BD,kCA6BC","sourcesContent":["import { replace } from 'rambdax'\nimport {\n  HIDDEN,\n  IN,\n  NOTIFY,\n  NOTIFY_ERROR,\n  NOTIFY_INFO,\n  NOTIFY_SUCCESS,\n  NOTIFY_WARNING,\n  OUT,\n} from './constants'\n\nconst initialState = {\n  message: '',\n  mode: '',\n  ms: 0,\n  status: HIDDEN,\n}\n\nfunction getModeFromAction(action){\n  return replace(NOTIFY, '', action.type)\n}\n\nexport function notifyStore(\n  state = initialState,\n  action,\n) {\n\n  switch (action.type) {\n    case NOTIFY_SUCCESS:\n    case NOTIFY_ERROR:\n    case NOTIFY_INFO:\n    case NOTIFY_WARNING:\n      return {\n        ...state,\n        ...action.payload,\n        mode: getModeFromAction(action),\n        status: HIDDEN,\n      }\n    case IN:\n    return {\n      ...state,\n      status: IN,\n    }\n    case OUT:\n    return {\n      ...state,\n      status: OUT,\n    }\n    default:\n      return state\n  }\n}\n"]}]}