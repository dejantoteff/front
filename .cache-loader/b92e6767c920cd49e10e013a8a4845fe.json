{"remainingRequest":"/home/just/repos/front/node_modules/thread-loader/dist/cjs.js??ref--4-1!/home/just/repos/front/node_modules/ts-loader/index.js??ref--4-2!/home/just/repos/front/src/_modules/post.ts","dependencies":[{"path":"/home/just/repos/front/src/_modules/post.ts","mtime":1519311067794},{"path":"/home/just/repos/front/node_modules/cache-loader/dist/cjs.js","mtime":1520676156713},{"path":"/home/just/repos/front/node_modules/thread-loader/dist/cjs.js","mtime":1520676204585},{"path":"/home/just/repos/front/node_modules/ts-loader/index.js","mtime":1520676144729}],"contextDependencies":[],"result":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.post = (url, body) => __awaiter(this, void 0, void 0, function* () {\n    return fetch(url, {\n        body: JSON.stringify(body),\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n        method: 'POST',\n    });\n});\n",{"version":3,"file":"/home/just/repos/front/src/_modules/post.ts","sourceRoot":"","sources":["/home/just/repos/front/src/_modules/post.ts"],"names":[],"mappings":";;;;;;;;;;AAAa,QAAA,IAAI,GAAgB,CAAO,GAAG,EAAE,IAAI,EAAE,EAAE;IACnD,MAAM,CAAE,KAAa,CAAC,GAAG,EAAE;QACzB,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;QAC1B,OAAO,EAAE;YACP,MAAM,EAAE,kBAAkB;YAC1B,cAAc,EAAE,kBAAkB;SACnC;QACD,MAAM,EAAE,MAAM;KACf,CAAC,CAAA;AACJ,CAAC,CAAA,CAAA","sourcesContent":["export const post: PostRequest = async (url, body) => {\n  return (fetch as any)(url, {\n    body: JSON.stringify(body),\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    method: 'POST',\n  })\n}\n"]}]}