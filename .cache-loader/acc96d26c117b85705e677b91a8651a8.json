{"remainingRequest":"/home/just/repos/front/node_modules/thread-loader/dist/cjs.js??ref--4-1!/home/just/repos/front/node_modules/ts-loader/index.js??ref--4-2!/home/just/repos/front/src/user/components/form.tsx","dependencies":[{"path":"/home/just/repos/front/src/user/components/form.tsx","mtime":1520604164188},{"path":"/home/just/repos/front/node_modules/cache-loader/dist/cjs.js","mtime":1520676156713},{"path":"/home/just/repos/front/node_modules/thread-loader/dist/cjs.js","mtime":1520676204585},{"path":"/home/just/repos/front/node_modules/ts-loader/index.js","mtime":1520676144729}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = require(\"react\");\nconst common_1 = require(\"../../common\");\nconst actions_1 = require(\"../actions\");\nconst styled_1 = require(\"../styled\");\nconst EMAIL_MIN_LENGTH = 5;\nconst PASSWORD_MIN_LENGTH = 5;\nconst isValidForm = (input) => {\n    return input.email &&\n        input.password &&\n        input.email.length > EMAIL_MIN_LENGTH\n        && input.password.length > PASSWORD_MIN_LENGTH;\n};\nfunction onClick() {\n    const email = document.getElementById('email');\n    const password = document.getElementById('password');\n    const formContent = {\n        email: email.value,\n        password: password.value,\n    };\n    if (isValidForm(formContent)) {\n        email.value = '';\n        password.value = '';\n    }\n    return isValidForm(formContent) ?\n        formContent :\n        false;\n}\nclass UserForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onLoginClick = this.onLoginClick.bind(this);\n        this.onRegisterClick = this.onRegisterClick.bind(this);\n        this.whenPassword = this.whenPassword.bind(this);\n    }\n    onLoginClick() {\n        const formContent = onClick();\n        const willDispatch = formContent === false ?\n            common_1.invalidForm() :\n            actions_1.login(formContent);\n        this.props.dispatch(willDispatch);\n    }\n    onRegisterClick() {\n        const formContent = onClick();\n        const willDispatch = formContent === false ?\n            common_1.invalidForm() :\n            actions_1.register(formContent);\n        this.props.dispatch(willDispatch);\n    }\n    whenPassword(event) {\n        if (event.key === 'Enter') {\n            this.onLoginClick();\n        }\n    }\n    render() {\n        return (React.createElement(styled_1.FormContainer, null,\n            React.createElement(styled_1.Form, null,\n                React.createElement(\"div\", null,\n                    this.props.store.logged && React.createElement(\"span\", null, \"Log in\"),\n                    !this.props.store.logged && React.createElement(\"span\", null, \"Create account\")),\n                React.createElement(\"div\", null,\n                    React.createElement(\"input\", { type: 'email', name: 'email', placeholder: 'email', id: 'email' })),\n                React.createElement(\"div\", null,\n                    React.createElement(\"input\", { type: 'password', name: 'password', placeholder: 'password', id: 'password', onKeyPress: this.whenPassword })),\n                React.createElement(\"div\", null,\n                    React.createElement(\"button\", { type: 'button', onClick: this.onRegisterClick }, \"Register\"),\n                    React.createElement(\"button\", { type: 'button', onClick: this.onLoginClick }, \"Login\")))));\n    }\n}\nexports.UserForm = UserForm;\n",{"version":3,"file":"/home/just/repos/front/src/user/components/form.tsx","sourceRoot":"","sources":["/home/just/repos/front/src/user/components/form.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { invalidForm } from '../../common'\nimport { login, register } from '../actions'\nimport { Form, FormContainer } from '../styled'\n\nconst EMAIL_MIN_LENGTH = 5\nconst PASSWORD_MIN_LENGTH = 5\n\nconst isValidForm = (input: any): boolean => {\n\n  return input.email &&\n    input.password &&\n    input.email.length > EMAIL_MIN_LENGTH\n    && input.password.length > PASSWORD_MIN_LENGTH\n}\n\nfunction onClick() {\n  const email = document.getElementById('email') as HTMLInputElement\n  const password = document.getElementById('password') as HTMLInputElement\n\n  const formContent = {\n    email: email.value,\n    password: password.value,\n  }\n\n  if (isValidForm(formContent)) {\n    email.value = ''\n    password.value = ''\n  }\n\n  return isValidForm(formContent) ?\n    formContent :\n    false\n}\n\nexport class UserForm extends React.Component<UserProps, {}> {\n  constructor(props: any) {\n    super(props)\n    this.onLoginClick = this.onLoginClick.bind(this)\n    this.onRegisterClick = this.onRegisterClick.bind(this)\n    this.whenPassword = this.whenPassword.bind(this)\n  }\n  public onLoginClick() {\n    const formContent = onClick()\n\n    const willDispatch = formContent === false ?\n      invalidForm() :\n      login(formContent)\n\n    this.props.dispatch(willDispatch)\n  }\n  public onRegisterClick() {\n    const formContent = onClick()\n\n    const willDispatch = formContent === false ?\n      invalidForm() :\n      register(formContent)\n\n    this.props.dispatch(willDispatch)\n  }\n  public whenPassword(event: any) {\n    if (event.key === 'Enter') {\n      this.onLoginClick()\n    }\n  }\n  public render() {\n    return (\n      <FormContainer>\n        <Form>\n\n          <div>\n            {this.props.store.logged && <span>Log in</span>}\n            {!this.props.store.logged && <span>Create account</span>}\n          </div>\n\n          <div>\n            <input\n              type='email'\n              name='email'\n              placeholder='email'\n              id='email'\n            />\n          </div>\n\n          <div>\n            <input\n              type='password'\n              name='password'\n              placeholder='password'\n              id='password'\n              onKeyPress={this.whenPassword}\n            />\n          </div>\n\n          <div>\n            <button type='button' onClick={this.onRegisterClick}>Register</button>\n            <button type='button' onClick={this.onLoginClick}>Login</button>\n          </div>\n        </Form>\n\n      </FormContainer>\n    )\n  }\n}\n"]}]}