{"remainingRequest":"/home/just/repos/front/node_modules/thread-loader/dist/cjs.js??ref--4-1!/home/just/repos/front/node_modules/ts-loader/index.js??ref--4-2!/home/just/repos/front/src/carrier/languages.tsx","dependencies":[{"path":"/home/just/repos/front/src/carrier/languages.tsx","mtime":1520602583580},{"path":"/home/just/repos/front/node_modules/cache-loader/dist/cjs.js","mtime":1520676156713},{"path":"/home/just/repos/front/node_modules/thread-loader/dist/cjs.js","mtime":1520676204585},{"path":"/home/just/repos/front/node_modules/ts-loader/index.js","mtime":1520676144729}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst classnames_1 = require(\"classnames\");\nconst React = require(\"react\");\nconst constants_1 = require(\"../constants\");\nconst actions_1 = require(\"./actions\");\nconst languages_1 = require(\"./styled/languages\");\nfunction SingleLanguage(input) {\n    const { dispatch, from, to, currentPair } = input;\n    const languagePair = `${from}${constants_1.LANGUAGE_SEPARATOR}${to}`;\n    const className = classnames_1.classnames({\n        active_language: languagePair === currentPair,\n    });\n    const onClick = () => dispatch(actions_1.click({ from, to }));\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: className, onClick: onClick }, languagePair)));\n}\nfunction LanguagesComponent(input) {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(languages_1.LanguagesContainer, null,\n            React.createElement(languages_1.Languages, null,\n                React.createElement(SingleLanguage, Object.assign({}, input, { from: 'DE', to: 'EN' })),\n                React.createElement(SingleLanguage, Object.assign({}, input, { from: 'DE', to: 'BG' })),\n                React.createElement(SingleLanguage, Object.assign({}, input, { from: 'EN', to: 'DE' })),\n                React.createElement(SingleLanguage, Object.assign({}, input, { from: 'EN', to: 'BG' })),\n                React.createElement(SingleLanguage, Object.assign({}, input, { from: 'BG', to: 'DE' })),\n                React.createElement(SingleLanguage, Object.assign({}, input, { from: 'BG', to: 'EN' }))))));\n}\nexports.LanguagesComponent = LanguagesComponent;\n",{"version":3,"file":"/home/just/repos/front/src/carrier/languages.tsx","sourceRoot":"","sources":["/home/just/repos/front/src/carrier/languages.tsx"],"names":[],"mappings":";;AAAA,2CAAuC;AACvC,+BAA8B;AAC9B,4CAAiD;AACjD,uCAAiC;AAEjC,kDAG2B;AAS3B,wBAAwB,KAAY;IAClC,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,EAAE,WAAW,EAAE,GAAG,KAAK,CAAA;IACjD,MAAM,YAAY,GAAG,GAAG,IAAI,GAAG,8BAAkB,GAAG,EAAE,EAAE,CAAA;IACxD,MAAM,SAAS,GAAG,uBAAU,CAAC;QAC3B,eAAe,EAAE,YAAY,KAAK,WAAW;KAC9C,CAAC,CAAA;IACF,MAAM,OAAO,GAAG,GAAG,EAAE,CAAC,QAAQ,CAAC,eAAK,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,CAAA;IAEnD,MAAM,CAAC,CACL,oBAAC,KAAK,CAAC,QAAQ;QACb,6BACE,SAAS,EAAE,SAAS,EACpB,OAAO,EAAE,OAAO,IAEf,YAAY,CACT,CACS,CAClB,CAAA;AACH,CAAC;AAED,4BAAmC,KAAU;IAC3C,MAAM,CAAC,CACL,oBAAC,KAAK,CAAC,QAAQ;QACb,oBAAC,8BAAkB;YAEjB,oBAAC,qBAAS;gBACR,oBAAC,cAAc,oBAAK,KAAK,IAAE,IAAI,EAAC,IAAI,EAAC,EAAE,EAAC,IAAI,IAAG;gBAC/C,oBAAC,cAAc,oBAAK,KAAK,IAAE,IAAI,EAAC,IAAI,EAAC,EAAE,EAAC,IAAI,IAAG;gBAC/C,oBAAC,cAAc,oBAAK,KAAK,IAAE,IAAI,EAAC,IAAI,EAAC,EAAE,EAAC,IAAI,IAAG;gBAC/C,oBAAC,cAAc,oBAAK,KAAK,IAAE,IAAI,EAAC,IAAI,EAAC,EAAE,EAAC,IAAI,IAAG;gBAC/C,oBAAC,cAAc,oBAAK,KAAK,IAAE,IAAI,EAAC,IAAI,EAAC,EAAE,EAAC,IAAI,IAAG;gBAC/C,oBAAC,cAAc,oBAAK,KAAK,IAAE,IAAI,EAAC,IAAI,EAAC,EAAE,EAAC,IAAI,IAAG,CACrC,CACO,CACN,CAClB,CAAA;AACH,CAAC;AAhBD,gDAgBC","sourcesContent":["import { classnames } from 'classnames'\nimport * as React from 'react'\nimport { LANGUAGE_SEPARATOR } from '../constants'\nimport { click } from './actions'\n\nimport {\n  Languages,\n  LanguagesContainer,\n} from './styled/languages'\n\ninterface Input {\n  dispatch: any\n  from: Language\n  to: Language\n  currentPair: string\n}\n\nfunction SingleLanguage(input: Input) {\n  const { dispatch, from, to, currentPair } = input\n  const languagePair = `${from}${LANGUAGE_SEPARATOR}${to}`\n  const className = classnames({\n    active_language: languagePair === currentPair,\n  })\n  const onClick = () => dispatch(click({ from, to }))\n\n  return (\n    <React.Fragment>\n      <div\n        className={className}\n        onClick={onClick}\n      >\n        {languagePair}\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport function LanguagesComponent(input: any) {\n  return (\n    <React.Fragment>\n      <LanguagesContainer>\n\n        <Languages>\n          <SingleLanguage {...input} from='DE' to='EN' />\n          <SingleLanguage {...input} from='DE' to='BG' />\n          <SingleLanguage {...input} from='EN' to='DE' />\n          <SingleLanguage {...input} from='EN' to='BG' />\n          <SingleLanguage {...input} from='BG' to='DE' />\n          <SingleLanguage {...input} from='BG' to='EN' />\n        </Languages>\n      </LanguagesContainer>\n    </React.Fragment>\n  )\n}\n"]}]}